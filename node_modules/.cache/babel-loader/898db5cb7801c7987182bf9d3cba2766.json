{"ast":null,"code":"import React from \"react\";\n\nclass Flashcard extends React.Component {\n  constructor(term) {\n    this.state = {\n      term: term,\n      definition: \"\"\n    };\n    this.fetchDefinition(term);\n  }\n\n  get Term() {\n    return this.term;\n  }\n\n  get Definition() {\n    return this.definition;\n  }\n\n  fetchDefinition(term) {\n    const key = \"cb25488e-3745-487a-8e94-4f5892774491\";\n    const url = `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${term}?key=${key}`;\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.json();\n    }).then(data => {\n      const termDefinition = this.parseData(data);\n      this.setState({\n        definition: termDefinition\n      });\n    }).catch(err => {\n      this.setState({\n        definition: \"Error: No such word!\"\n      });\n    });\n  }\n\n}\n\nexport default Flashcard;","map":{"version":3,"sources":["/Users/rhuck/Documents/CompProjects/react_projects/flashcard/src/Flashcard.js"],"names":["React","Flashcard","Component","constructor","term","state","definition","fetchDefinition","Term","Definition","key","url","fetch","then","response","ok","json","data","termDefinition","parseData","setState","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAEA,IADG;AAETE,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIA,SAAKC,eAAL,CAAqBH,IAArB;AACH;;AAED,MAAII,IAAJ,GAAW;AACP,WAAO,KAAKJ,IAAZ;AACH;;AAED,MAAIK,UAAJ,GAAiB;AACb,WAAO,KAAKH,UAAZ;AACH;;AAEDC,EAAAA,eAAe,CAACH,IAAD,EAAO;AAClB,UAAMM,GAAG,GAAG,sCAAZ;AACA,UAAMC,GAAG,GAAI,mEAAkEP,IAAK,QAAOM,GAAI,EAA/F;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMD,QAAN;AACH;;AACD,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACH,KANL,EAOKH,IAPL,CAOUI,IAAI,IAAI;AACV,YAAMC,cAAc,GAAG,KAAKC,SAAL,CAAeF,IAAf,CAAvB;AACA,WAAKG,QAAL,CAAc;AAACd,QAAAA,UAAU,EAAEY;AAAb,OAAd;AACH,KAVL,EAWKG,KAXL,CAWWC,GAAG,IAAI;AACV,WAAKF,QAAL,CAAc;AAACd,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAbL;AAcH;;AAnCmC;;AAuDxC,eAAeL,SAAf","sourcesContent":["import React from \"react\"\n\nclass Flashcard extends React.Component {\n    constructor(term) {\n        this.state = {\n            term: term,\n            definition: \"\"\n        }\n        this.fetchDefinition(term)\n    }\n\n    get Term() {\n        return this.term;\n    }\n\n    get Definition() {\n        return this.definition\n    }\n\n    fetchDefinition(term) {\n        const key = \"cb25488e-3745-487a-8e94-4f5892774491\"\n        const url = `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${term}?key=${key}`\n\n        fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw response;\n                }\n                return response.json()\n            })\n            .then(data => {\n                const termDefinition = this.parseData(data)\n                this.setState({definition: termDefinition})\n            })\n            .catch(err => {\n                this.setState({definition: \"Error: No such word!\"})\n            })\n    }\n\n    parseData = (data) => {\n        let definitionText = ``\n        let totalCounter = 1\n        \n        for(let i=0; i<data.length;i++){\n            const shortDefArray = data[i].shortdef\n\n            for(let j=0; j<shortDefArray.length;j++){\n                definitionText += `${String(totalCounter)}. ${shortDefArray[j]}\\n`\n                totalCounter++;\n            }\n        }\n\n        return definitionText\n    }\n\n}\n\nexport default Flashcard;"]},"metadata":{},"sourceType":"module"}