{"ast":null,"code":"class Flashcard {\n  constructor(term) {\n    this.parseData = data => {\n      let definitionText = ``;\n      let totalCounter = 1;\n\n      for (let i = 0; i < data.length; i++) {\n        const shortDefArray = data[i].shortdef;\n\n        for (let j = 0; j < shortDefArray.length; j++) {\n          definitionText += `${String(totalCounter)}. ${shortDefArray[j]}\\n`;\n          totalCounter++;\n        }\n      }\n\n      return definitionText;\n    };\n\n    this.term = term;\n    this.definition = this.fetchDefinition(term);\n  }\n\n  fetchDefinition(term) {\n    const key = \"cb25488e-3745-487a-8e94-4f5892774491\";\n    const url = `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${term}?key=${key}`;\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.json();\n    }).then(data => {\n      const termDefinition = this.parseData(data);\n      this.setState({\n        definition: termDefinition\n      });\n    }).catch(err => {\n      this.setState({\n        definition: \"Error: Not a Real English Word!\"\n      });\n    });\n  }\n\n}\n\nexport default Flashcard;","map":{"version":3,"sources":["/Users/rhuck/Documents/CompProjects/react_projects/flashcard/src/Flashcard.js"],"names":["Flashcard","constructor","term","parseData","data","definitionText","totalCounter","i","length","shortDefArray","shortdef","j","String","definition","fetchDefinition","key","url","fetch","then","response","ok","json","termDefinition","setState","catch","err"],"mappings":"AAAA,MAAMA,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAyBlBC,SAzBkB,GAyBLC,IAAD,IAAU;AAClB,UAAIC,cAAc,GAAI,EAAtB;AACA,UAAIC,YAAY,GAAG,CAAnB;;AAEA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,IAAI,CAACI,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,cAAME,aAAa,GAAGL,IAAI,CAACG,CAAD,CAAJ,CAAQG,QAA9B;;AAEA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,aAAa,CAACD,MAA7B,EAAoCG,CAAC,EAArC,EAAwC;AACpCN,UAAAA,cAAc,IAAK,GAAEO,MAAM,CAACN,YAAD,CAAe,KAAIG,aAAa,CAACE,CAAD,CAAI,IAA/D;AACAL,UAAAA,YAAY;AACf;AACJ;;AAED,aAAOD,cAAP;AACH,KAvCiB;;AACd,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKW,UAAL,GAAkB,KAAKC,eAAL,CAAqBZ,IAArB,CAAlB;AACH;;AAEDY,EAAAA,eAAe,CAACZ,IAAD,EAAO;AAClB,UAAMa,GAAG,GAAG,sCAAZ;AACA,UAAMC,GAAG,GAAI,mEAAkEd,IAAK,QAAOa,GAAI,EAA/F;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMD,QAAN;AACH;;AACD,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACH,KANL,EAOKH,IAPL,CAOUd,IAAI,IAAI;AACV,YAAMkB,cAAc,GAAG,KAAKnB,SAAL,CAAeC,IAAf,CAAvB;AACA,WAAKmB,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAES;AAAd,OAAd;AACH,KAVL,EAWKE,KAXL,CAWWC,GAAG,IAAI;AACV,WAAKF,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAE;AAAd,OAAd;AACH,KAbL;AAcH;;AAxBW;;AA4ChB,eAAeb,SAAf","sourcesContent":["class Flashcard {\n    constructor(term) {\n        this.term = term\n        this.definition = this.fetchDefinition(term)\n    }\n\n    fetchDefinition(term) {\n        const key = \"cb25488e-3745-487a-8e94-4f5892774491\"\n        const url = `https://www.dictionaryapi.com/api/v3/references/collegiate/json/${term}?key=${key}`\n\n        fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw response;\n                }\n                return response.json()\n            })\n            .then(data => {\n                const termDefinition = this.parseData(data)\n                this.setState({ definition: termDefinition })\n            })\n            .catch(err => {\n                this.setState({ definition: \"Error: Not a Real English Word!\" })\n            })\n    }\n\n    parseData = (data) => {\n        let definitionText = ``\n        let totalCounter = 1\n        \n        for(let i=0; i<data.length;i++){\n            const shortDefArray = data[i].shortdef\n\n            for(let j=0; j<shortDefArray.length;j++){\n                definitionText += `${String(totalCounter)}. ${shortDefArray[j]}\\n`\n                totalCounter++;\n            }\n        }\n\n        return definitionText\n    }\n\n}\n\nexport default Flashcard;"]},"metadata":{},"sourceType":"module"}